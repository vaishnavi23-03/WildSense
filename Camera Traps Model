{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"raw","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings(\"ignore\")","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:47:32.150784Z","iopub.execute_input":"2024-05-01T07:47:32.151094Z","iopub.status.idle":"2024-05-01T07:47:32.155541Z","shell.execute_reply.started":"2024-05-01T07:47:32.151068Z","shell.execute_reply":"2024-05-01T07:47:32.154620Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"from datasets import load_dataset\n\ndataset = load_dataset(\"society-ethics/lila_camera_traps\", \"Caltech Camera Traps\")\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:47:32.156873Z","iopub.execute_input":"2024-05-01T07:47:32.157200Z","iopub.status.idle":"2024-05-01T07:47:33.356962Z","shell.execute_reply.started":"2024-05-01T07:47:32.157165Z","shell.execute_reply":"2024-05-01T07:47:33.356142Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"dataset","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:47:33.359670Z","iopub.execute_input":"2024-05-01T07:47:33.360399Z","iopub.status.idle":"2024-05-01T07:47:33.367207Z","shell.execute_reply.started":"2024-05-01T07:47:33.360361Z","shell.execute_reply":"2024-05-01T07:47:33.366286Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['file_name', 'width', 'height', 'seq_num_frames', 'date_captured', 'seq_id', 'location', 'rights_holder', 'frame_num', 'annotations', 'bboxes', 'image'],\n        num_rows: 243100\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"import cv2\nfrom skimage.feature import local_binary_pattern\nfrom skimage import io\nimport numpy as np\nfrom tqdm import tqdm\nfrom datasets import load_dataset","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:47:33.368560Z","iopub.execute_input":"2024-05-01T07:47:33.368936Z","iopub.status.idle":"2024-05-01T07:47:33.851263Z","shell.execute_reply.started":"2024-05-01T07:47:33.368909Z","shell.execute_reply":"2024-05-01T07:47:33.850418Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"import requests\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:47:33.852500Z","iopub.execute_input":"2024-05-01T07:47:33.853111Z","iopub.status.idle":"2024-05-01T07:47:33.857886Z","shell.execute_reply.started":"2024-05-01T07:47:33.853081Z","shell.execute_reply":"2024-05-01T07:47:33.856800Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nall_labels = []\nfor i, example in enumerate(tqdm(dataset[\"train\"])):\n  \n        try:\n            \n            category_name = example[\"annotations\"][\"taxonomy\"][0][\"species\"] \n            all_labels.append(category_name)\n        except Exception as e:\n            print(f\"Error occurred while processing image: {e}\")\n\nall_labels = np.array(all_labels)\nprint(all_labels)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:47:33.859145Z","iopub.execute_input":"2024-05-01T07:47:33.859502Z","iopub.status.idle":"2024-05-01T07:48:38.594924Z","shell.execute_reply.started":"2024-05-01T07:47:33.859468Z","shell.execute_reply":"2024-05-01T07:48:38.593763Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stderr","text":"100%|██████████| 243100/243100 [01:04<00:00, 3758.69it/s]\n","output_type":"stream"},{"name":"stdout","text":"[None None 2 ... None None 8]\n","output_type":"stream"}]},{"cell_type":"code","source":"non_none_labels = all_labels[all_labels != None]\nprint(non_none_labels)\nprint(len(non_none_labels))","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:48:38.596379Z","iopub.execute_input":"2024-05-01T07:48:38.596872Z","iopub.status.idle":"2024-05-01T07:48:38.615160Z","shell.execute_reply.started":"2024-05-01T07:48:38.596835Z","shell.execute_reply":"2024-05-01T07:48:38.614123Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"[2 8 5 ... 8 5 8]\n67692\n","output_type":"stream"}]},{"cell_type":"code","source":"all_labels = np.array(all_labels)\nprint(all_labels)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:48:38.616540Z","iopub.execute_input":"2024-05-01T07:48:38.616843Z","iopub.status.idle":"2024-05-01T07:48:38.627437Z","shell.execute_reply.started":"2024-05-01T07:48:38.616818Z","shell.execute_reply":"2024-05-01T07:48:38.626441Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"[None None 2 ... None None 8]\n","output_type":"stream"}]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport cv2\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.svm import SVC\nfrom tensorflow.keras.preprocessing.image import load_img, img_to_array\nfrom tensorflow.keras.applications import VGG16\nfrom tensorflow.keras.models import Model\n\n# Load pre-trained CNN model without top (fully connected) layers\nbase_model = VGG16(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n\n# Function to preprocess and extract features from an image\nimport tempfile\nimport os\n\ndef extract_features(image_array):\n    # Save the image array to a temporary file\n    temp_file = tempfile.NamedTemporaryFile(delete=False, suffix='.jpg')\n    temp_file_path = temp_file.name\n    cv2.imwrite(temp_file_path, cv2.cvtColor(image_array, cv2.COLOR_BGR2RGB))\n    temp_file.close()\n    \n    # Load and preprocess the image\n    img = load_img(temp_file_path, target_size=(224, 224))\n    img_array = img_to_array(img)\n    img_array = np.expand_dims(img_array, axis=0)  # Add batch dimension\n    img_array = img_array / 255.0  # Normalize pixel values\n    \n    # Extract features using the pre-trained CNN model\n    features = base_model.predict(img_array)\n    \n    # Flatten the features\n    flattened_features = features.flatten()\n    \n    # Delete the temporary file\n    os.unlink(temp_file_path)\n    \n    return flattened_features\n\n# Assuming all_labels2 and all_labels are already populated\nsampling_interval = 100\n\nfeatures_list = []\nlabels_list = []\n\nfor i, (example, label) in enumerate(zip(tqdm(dataset[\"train\"]), all_labels)):\n    if (i > 121550):\n        break\n    if i % sampling_interval == 0 and label is not None:\n        try:\n            image_url = example[\"image\"]\n            response = requests.get(image_url)\n\n            if response.status_code == 200:\n                image_array = np.frombuffer(response.content, np.uint8)\n                image = cv2.imdecode(image_array, cv2.IMREAD_COLOR)\n\n                if image is not None:\n                    features = extract_features(image)\n                    features_list.append(features)\n                    labels_list.append(label)\n                else:\n                    print(\"Error: Unable to decode image.\")\n            else:\n                print(f\"Error: Unable to download image - Status Code: {response.status_code}\")\n        except Exception as e:\n            print(f\"Error occurred while processing image: {e}\")\n\n# Convert the feature and label lists to NumPy arrays\nX = np.array(features_list)\ny = np.array(labels_list)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:48:38.630773Z","iopub.execute_input":"2024-05-01T07:48:38.631123Z","iopub.status.idle":"2024-05-01T07:52:46.366171Z","shell.execute_reply.started":"2024-05-01T07:48:38.631096Z","shell.execute_reply":"2024-05-01T07:52:46.365159Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stderr","text":"2024-05-01 07:48:40.964052: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-05-01 07:48:40.964178: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-05-01 07:48:41.093517: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"name":"stdout","text":"Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n\u001b[1m58889256/58889256\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n","output_type":"stream"},{"name":"stderr","text":"  0%|          | 0/243100 [00:00<?, ?it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5s/step\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1714549738.240396     132 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n  0%|          | 201/243100 [00:05<1:53:33, 35.65it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  0%|          | 501/243100 [00:06<42:39, 94.79it/s]  ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":"  1%|          | 1735/243100 [00:07<06:54, 582.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":"  1%|          | 1996/243100 [00:08<08:03, 498.63it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  1%|          | 2642/243100 [00:08<06:07, 653.84it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  1%|          | 2901/243100 [00:09<07:21, 543.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  1%|▏         | 3457/243100 [00:10<06:01, 663.23it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  1%|▏         | 3645/243100 [00:11<08:03, 495.57it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 3784/243100 [00:11<10:02, 397.44it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 3901/243100 [00:12<12:12, 326.46it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 4101/243100 [00:13<14:51, 268.19it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 5105/243100 [00:14<05:29, 721.30it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  2%|▏         | 5312/243100 [00:15<07:17, 543.64it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 6245/243100 [00:15<04:04, 967.97it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 6831/243100 [00:17<05:53, 667.95it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 7454/243100 [00:18<05:14, 749.58it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  3%|▎         | 8382/243100 [00:19<03:37, 1081.18it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":"  4%|▎         | 9068/243100 [00:19<03:45, 1036.51it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  4%|▍         | 9665/243100 [00:21<05:46, 673.33it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":"  5%|▍         | 11051/243100 [00:22<02:49, 1368.28it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  5%|▍         | 11401/243100 [00:23<04:22, 883.43it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  5%|▍         | 11619/243100 [00:23<05:58, 645.11it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":"  5%|▌         | 12459/243100 [00:24<04:04, 941.95it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 14082/243100 [00:25<02:02, 1868.06it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 14401/243100 [00:26<03:49, 994.36it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 14701/243100 [00:27<05:14, 726.00it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 14874/243100 [00:27<06:34, 578.25it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 15004/243100 [00:28<08:44, 434.84it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▌         | 15101/243100 [00:28<11:16, 337.24it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  6%|▋         | 15660/243100 [00:29<07:02, 538.46it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 16719/243100 [00:30<03:41, 1022.76it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 17350/243100 [00:31<03:56, 954.65it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 17701/243100 [00:32<05:06, 734.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  7%|▋         | 17878/243100 [00:32<07:04, 531.01it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 18740/243100 [00:33<04:21, 856.61it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 18974/243100 [00:35<08:27, 441.37it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 19489/243100 [00:36<06:22, 584.74it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 20045/243100 [00:36<05:13, 711.99it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 20301/243100 [00:37<06:38, 558.67it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 20459/243100 [00:38<08:20, 445.11it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  8%|▊         | 20577/243100 [00:38<11:00, 336.93it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 21441/243100 [00:39<04:48, 767.78it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 22059/243100 [00:40<04:23, 838.72it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 22301/243100 [00:41<06:13, 591.05it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":"  9%|▉         | 22501/243100 [00:42<07:39, 479.63it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|▉         | 23352/243100 [00:42<04:05, 894.56it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|▉         | 23583/243100 [00:44<08:05, 451.88it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|▉         | 24098/243100 [00:44<06:11, 589.47it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 24663/243100 [00:45<05:00, 726.91it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 25001/243100 [00:46<06:09, 590.54it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 25201/243100 [00:47<07:30, 484.15it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 25322/243100 [00:47<09:26, 384.29it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 25412/243100 [00:48<11:39, 311.29it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 10%|█         | 25501/243100 [00:48<14:01, 258.54it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 25801/243100 [00:49<11:33, 313.39it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 26285/243100 [00:50<07:24, 488.23it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 26601/243100 [00:51<07:38, 472.61it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 26901/243100 [00:51<07:56, 454.09it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 11%|█         | 27201/243100 [00:52<08:24, 427.72it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 11%|█▏        | 27401/243100 [00:53<09:07, 394.19it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 28049/243100 [00:54<06:05, 588.52it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 28548/243100 [00:54<05:12, 686.83it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 28728/243100 [00:55<07:06, 503.05it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 28862/243100 [00:56<09:37, 371.08it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 29101/243100 [00:56<09:51, 361.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 29201/243100 [00:57<11:04, 321.89it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 29301/243100 [00:58<13:34, 262.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 29401/243100 [00:58<15:32, 229.28it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 29701/243100 [00:59<12:31, 283.89it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 30169/243100 [01:00<07:54, 448.30it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 12%|█▏        | 30302/243100 [01:01<09:55, 357.09it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 31317/243100 [01:01<04:08, 851.37it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 31601/243100 [01:02<05:37, 626.54it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 31801/243100 [01:03<06:31, 539.73it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 31929/243100 [01:03<07:53, 446.06it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 13%|█▎        | 32443/243100 [01:04<05:58, 587.83it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▎        | 33041/243100 [01:05<04:33, 768.73it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▍        | 33581/243100 [01:06<04:20, 804.76it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▍        | 33801/243100 [01:06<06:08, 568.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 14%|█▍        | 34101/243100 [01:07<06:47, 512.35it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 35395/243100 [01:08<02:48, 1230.75it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 35701/243100 [01:09<04:30, 765.60it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 35903/243100 [01:10<08:41, 397.46it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 36049/243100 [01:11<09:59, 345.65it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 36301/243100 [01:12<09:53, 348.60it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▍        | 36401/243100 [01:12<12:07, 283.98it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▌        | 36501/243100 [01:13<14:00, 245.82it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▌        | 36601/243100 [01:14<15:32, 221.51it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 15%|█▌        | 37495/243100 [01:14<05:04, 675.99it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▌        | 38388/243100 [01:15<03:15, 1046.57it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▌        | 38638/243100 [01:16<05:00, 679.52it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▌        | 39185/243100 [01:17<04:20, 781.86it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▋        | 39766/243100 [01:18<04:07, 822.46it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 16%|█▋        | 39983/243100 [01:19<08:02, 421.08it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 40301/243100 [01:20<08:08, 415.20it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 41296/243100 [01:21<04:15, 791.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 41521/243100 [01:22<07:56, 423.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 41684/243100 [01:23<09:08, 367.23it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 17%|█▋        | 42255/243100 [01:23<06:09, 542.84it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 42949/243100 [01:24<04:39, 715.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 43903/243100 [01:25<03:09, 1050.11it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 44168/243100 [01:26<06:15, 529.93it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 44713/243100 [01:27<04:57, 667.17it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 18%|█▊        | 44920/243100 [01:28<06:13, 530.57it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▊        | 45101/243100 [01:29<07:42, 428.18it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▊        | 45217/243100 [01:29<08:10, 403.83it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▊        | 45308/243100 [01:30<10:33, 312.01it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▉        | 45849/243100 [01:30<06:24, 512.89it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▉        | 46354/243100 [01:31<05:04, 645.26it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 19%|█▉        | 46537/243100 [01:33<09:54, 330.39it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 47410/243100 [01:33<04:25, 736.38it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 47647/243100 [01:34<05:48, 561.60it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 47823/243100 [01:35<06:53, 472.12it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 47956/243100 [01:35<08:40, 374.69it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 48055/243100 [01:36<10:44, 302.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|█▉        | 48301/243100 [01:37<10:10, 319.13it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|██        | 48856/243100 [01:38<06:17, 514.12it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|██        | 48999/243100 [01:38<08:27, 382.49it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|██        | 49557/243100 [01:39<05:42, 564.81it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 20%|██        | 49801/243100 [01:40<06:18, 510.21it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 50354/243100 [01:40<04:56, 649.13it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 50899/243100 [01:41<04:25, 723.45it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 51101/243100 [01:43<08:25, 379.51it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██        | 51602/243100 [01:43<06:04, 525.56it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██▏       | 51801/243100 [01:44<07:16, 438.05it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██▏       | 51938/243100 [01:45<09:10, 347.30it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██▏       | 52039/243100 [01:46<11:24, 279.29it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 21%|██▏       | 52114/243100 [01:46<14:42, 216.48it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 30ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 52401/243100 [01:47<11:34, 274.57it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 52701/243100 [01:48<09:58, 318.17it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 53150/243100 [01:49<06:55, 456.86it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 53661/243100 [01:49<05:10, 610.09it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 53901/243100 [01:50<06:16, 503.00it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 54101/243100 [01:51<07:22, 427.14it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 54401/243100 [01:51<07:20, 428.81it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 22%|██▏       | 54501/243100 [01:52<09:12, 341.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 55155/243100 [01:53<05:28, 571.26it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 55302/243100 [01:54<09:29, 329.67it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 55945/243100 [01:55<05:57, 524.22it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 56109/243100 [01:56<09:18, 334.64it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 56601/243100 [01:57<06:37, 469.03it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 23%|██▎       | 56901/243100 [01:58<06:58, 445.18it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▎       | 57552/243100 [01:58<04:56, 626.69it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▎       | 57725/243100 [01:59<06:25, 481.48it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 57854/243100 [02:00<08:06, 380.95it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 58101/243100 [02:00<08:16, 372.63it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 58301/243100 [02:01<09:06, 338.41it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 58501/243100 [02:02<09:26, 325.73it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 58801/243100 [02:03<08:41, 353.69it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 24%|██▍       | 59101/243100 [02:03<08:18, 369.44it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▍       | 59651/243100 [02:04<05:52, 520.51it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▍       | 60250/243100 [02:05<04:33, 667.58it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 60782/243100 [02:06<04:04, 745.72it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 60981/243100 [02:06<05:38, 537.44it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 61482/243100 [02:07<04:47, 631.82it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 61665/243100 [02:08<06:14, 484.11it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 25%|██▌       | 61801/243100 [02:09<08:00, 377.31it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 62362/243100 [02:09<05:19, 566.56it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 62526/243100 [02:11<09:43, 309.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 62801/243100 [02:12<09:07, 329.35it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 62901/243100 [02:12<10:41, 280.84it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 63101/243100 [02:13<10:54, 274.83it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 63201/243100 [02:14<12:23, 242.05it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 63301/243100 [02:14<13:40, 219.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▌       | 63601/243100 [02:15<10:43, 278.85it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▋       | 64176/243100 [02:16<06:06, 487.93it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 26%|██▋       | 64314/243100 [02:16<07:49, 380.70it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 64962/243100 [02:17<04:56, 599.79it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 65129/243100 [02:18<06:22, 465.65it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 65401/243100 [02:19<06:43, 440.03it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 66246/243100 [02:19<03:27, 852.96it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 27%|██▋       | 66823/243100 [02:20<03:25, 856.32it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 67046/243100 [02:21<04:44, 618.36it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 67212/243100 [02:22<06:25, 456.47it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 67501/243100 [02:22<06:45, 432.90it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 28%|██▊       | 68061/243100 [02:23<04:55, 591.69it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▊       | 69328/243100 [02:24<02:16, 1277.63it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▊       | 69597/243100 [02:26<05:43, 504.54it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▊       | 69791/243100 [02:26<06:47, 425.29it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▉       | 69935/243100 [02:27<08:31, 338.65it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▉       | 70399/243100 [02:28<06:03, 475.45it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 29%|██▉       | 70884/243100 [02:29<05:02, 569.03it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 71800/243100 [02:30<02:53, 984.70it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 72045/243100 [02:30<04:13, 674.09it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 72227/243100 [02:31<05:59, 474.71it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 72501/243100 [02:32<06:24, 443.96it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 72607/243100 [02:33<08:07, 349.61it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|██▉       | 72701/243100 [02:33<09:59, 284.05it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 30%|███       | 73480/243100 [02:34<04:07, 686.68it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 74160/243100 [02:35<03:23, 830.58it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 74737/243100 [02:36<03:26, 816.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 74957/243100 [02:36<04:37, 606.34it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 75201/243100 [02:37<05:30, 508.67it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 75677/243100 [02:38<04:40, 597.57it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███       | 75901/243100 [02:38<05:06, 545.35it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███▏      | 76101/243100 [02:39<06:06, 455.36it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 31%|███▏      | 76203/243100 [02:40<07:54, 352.06it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 76748/243100 [02:41<05:20, 518.60it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 77001/243100 [02:41<05:53, 469.50it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 77201/243100 [02:42<07:16, 380.32it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 77501/243100 [02:43<06:56, 397.65it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 77801/243100 [02:43<06:47, 405.64it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 77901/243100 [02:44<08:19, 330.52it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 32%|███▏      | 78451/243100 [02:45<05:25, 505.23it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 79058/243100 [02:46<04:03, 673.73it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 79239/243100 [02:46<05:25, 503.38it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 79374/243100 [02:47<06:48, 400.51it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 79601/243100 [02:48<07:17, 373.47it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 80059/243100 [02:48<05:12, 522.27it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 80567/243100 [02:49<04:11, 645.80it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 80801/243100 [02:50<05:14, 516.29it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 81001/243100 [02:51<06:05, 442.96it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 81109/243100 [02:51<07:48, 346.08it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 33%|███▎      | 81401/243100 [02:52<07:15, 371.33it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▎      | 81501/243100 [02:53<09:20, 288.14it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▎      | 81701/243100 [02:53<09:03, 297.02it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 82251/243100 [02:54<05:30, 486.73it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 82501/243100 [02:55<06:17, 425.08it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 82605/243100 [02:55<07:40, 348.56it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 82801/243100 [02:56<07:56, 336.53it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 82901/243100 [02:57<09:28, 281.96it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 34%|███▍      | 83461/243100 [02:57<04:55, 539.63it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▍      | 83960/243100 [02:58<03:57, 670.23it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▍      | 84301/243100 [02:59<04:49, 547.81it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▌      | 85408/243100 [03:00<02:22, 1102.88it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▌      | 86020/243100 [03:01<03:47, 689.28it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 35%|███▌      | 86255/243100 [03:02<04:38, 562.28it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▌      | 86797/243100 [03:03<03:45, 692.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▌      | 87691/243100 [03:04<03:13, 804.36it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▌      | 88001/243100 [03:05<04:00, 645.59it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▋      | 88201/243100 [03:06<05:04, 508.19it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 36%|███▋      | 88401/243100 [03:06<05:59, 430.11it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 88976/243100 [03:07<04:23, 585.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 89147/243100 [03:08<05:36, 457.22it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 89274/243100 [03:09<07:00, 366.19it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 89601/243100 [03:09<06:31, 391.79it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 89701/243100 [03:10<07:25, 344.22it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 90269/243100 [03:11<04:37, 550.17it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 90501/243100 [03:11<05:18, 479.43it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 37%|███▋      | 90984/243100 [03:12<04:11, 604.70it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 91564/243100 [03:13<03:25, 738.74it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 92611/243100 [03:13<02:01, 1239.52it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 92869/243100 [03:14<03:11, 784.84it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 93101/243100 [03:15<04:16, 584.41it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 38%|███▊      | 93301/243100 [03:15<04:50, 515.21it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▊      | 93601/243100 [03:16<05:17, 470.92it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▊      | 93901/243100 [03:17<05:20, 465.26it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▊      | 94201/243100 [03:18<05:31, 449.67it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 94301/243100 [03:18<06:53, 359.42it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 94401/243100 [03:19<08:11, 302.47it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 94501/243100 [03:19<09:38, 257.01it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 94601/243100 [03:20<11:07, 222.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 39%|███▉      | 95872/243100 [03:21<02:27, 1001.07it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|███▉      | 96118/243100 [03:22<03:34, 684.13it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|███▉      | 96301/243100 [03:22<04:42, 519.32it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|████      | 97676/243100 [03:23<01:53, 1277.63it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|████      | 97946/243100 [03:24<03:02, 796.22it/s] ","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|████      | 98147/243100 [03:25<04:08, 583.65it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|████      | 98297/243100 [03:25<05:21, 449.90it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 40%|████      | 98409/243100 [03:26<06:39, 362.06it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 41%|████      | 98701/243100 [03:27<06:36, 364.09it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 41%|████      | 99267/243100 [03:28<04:37, 518.57it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 41%|████      | 99779/243100 [03:29<03:44, 637.09it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 41%|████▏     | 100332/243100 [03:30<04:15, 559.33it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 100900/243100 [03:31<04:37, 512.62it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 101889/243100 [03:32<02:35, 910.76it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 102143/243100 [03:33<03:36, 650.58it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 102332/243100 [03:34<06:17, 373.35it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 42%|████▏     | 102981/243100 [03:35<04:08, 563.03it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 103536/243100 [03:36<03:23, 685.28it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 103744/243100 [03:37<04:41, 494.31it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 104001/243100 [03:37<05:10, 447.82it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 104120/243100 [03:38<06:04, 381.50it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 104401/243100 [03:39<06:15, 369.79it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 104853/243100 [03:39<04:19, 532.39it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 104999/243100 [03:40<05:47, 397.75it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 43%|████▎     | 105201/243100 [03:41<06:39, 345.31it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 44%|████▎     | 105763/243100 [03:42<04:13, 540.84it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 44%|████▍     | 106639/243100 [03:43<02:24, 946.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 45%|████▍     | 108394/243100 [03:44<01:07, 2005.02it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 45%|████▍     | 109117/243100 [03:44<01:38, 1354.86it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","output_type":"stream"},{"name":"stderr","text":" 46%|████▌     | 112101/243100 [03:46<00:47, 2746.69it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 28ms/step\n","output_type":"stream"},{"name":"stderr","text":" 46%|████▋     | 112468/243100 [03:47<01:47, 1220.46it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 48%|████▊     | 116211/243100 [03:49<00:37, 3400.52it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 49%|████▉     | 118915/243100 [03:50<00:38, 3192.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","output_type":"stream"},{"name":"stderr","text":" 49%|████▉     | 119702/243100 [03:51<01:15, 1628.39it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","output_type":"stream"},{"name":"stderr","text":" 50%|████▉     | 121182/243100 [03:52<01:05, 1856.16it/s]","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step\n","output_type":"stream"},{"name":"stderr","text":" 50%|█████     | 121551/243100 [03:53<03:53, 520.04it/s] \n","output_type":"stream"}]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:53:02.406462Z","iopub.execute_input":"2024-05-01T07:53:02.407635Z","iopub.status.idle":"2024-05-01T07:53:02.415214Z","shell.execute_reply.started":"2024-05-01T07:53:02.407573Z","shell.execute_reply":"2024-05-01T07:53:02.414019Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"array([[0.0821155 , 0.        , 0.        , ..., 0.        , 0.5785745 ,\n        0.        ],\n       [0.08095409, 0.        , 0.        , ..., 0.        , 0.55827284,\n        0.        ],\n       [0.2590238 , 0.        , 0.        , ..., 0.        , 0.55884117,\n        0.        ],\n       ...,\n       [0.00445279, 0.        , 0.        , ..., 0.09728047, 1.0262372 ,\n        0.        ],\n       [0.8966054 , 0.        , 0.        , ..., 0.        , 1.0643289 ,\n        0.        ],\n       [0.40827644, 0.        , 0.        , ..., 0.        , 0.53847206,\n        0.        ]], dtype=float32)"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:53:06.594098Z","iopub.execute_input":"2024-05-01T07:53:06.595377Z","iopub.status.idle":"2024-05-01T07:53:06.602967Z","shell.execute_reply.started":"2024-05-01T07:53:06.595319Z","shell.execute_reply":"2024-05-01T07:53:06.601901Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"array([ 8,  8,  8, 10,  5,  5,  8,  8, 10, 10,  8,  8,  8,  2,  2,  8,  5,\n       10, 10,  1,  8,  4,  8,  8,  8,  8,  4,  1,  4,  4,  8,  8,  2,  1,\n       10,  4,  8,  4,  4, 10,  1,  8, 10,  2,  1,  1,  1,  4, 10,  8,  6,\n        8,  2,  4,  4,  4,  8,  8,  8,  4,  4,  8,  2,  8,  1, 10,  8,  2,\n       10, 10,  1, 10,  4,  8, 10, 10,  4, 10,  4,  8,  6,  2, 10,  8, 10,\n        4,  8,  4,  4,  8,  1,  1,  8,  5,  8,  8, 10,  8,  8,  8,  2,  1,\n        6,  8,  1,  8,  8,  4,  4,  8,  1,  2,  8,  6, 10,  1,  8,  2,  8,\n        6,  8,  4,  8,  8,  1,  8,  1, 10, 10,  1,  4,  2,  8,  8,  8,  2,\n        4,  5,  1,  8,  6,  8,  8,  8,  8, 10,  2,  8,  1,  5,  1,  6,  8,\n        1,  8,  8, 10,  8,  4,  8,  8,  1,  1,  1,  8,  8,  4,  4,  8,  8,\n        2,  1,  8,  1,  5,  8, 10,  4,  4,  8, 10,  2,  4,  4,  2, 10,  8,\n        8,  4,  4,  2, 10,  8,  5,  4,  4,  8,  4,  5, 10,  8,  8,  4,  8,\n        5, 10, 10,  5, 10,  4,  6,  5,  6,  2,  8,  8,  8,  4,  4,  4,  8,\n        4,  8, 10,  8,  8,  5,  1,  5,  8,  1,  4, 10,  8,  6, 10,  8,  2,\n        8,  1,  1,  8,  2, 10,  8,  8, 10,  4,  4, 10,  1,  4, 10,  4,  8,\n        2,  8,  1,  4,  2,  4,  4,  8,  5,  1,  4,  8,  8,  4,  8,  8,  8,\n        2,  2, 10,  4,  4,  5,  5,  2,  8, 10,  8,  4,  5,  4,  1,  1, 10,\n       10,  8, 10,  4,  1,  5,  2, 10,  8,  1,  4,  1,  1,  1,  1, 10, 10,\n        4,  3,  1])"},"metadata":{}}]},{"cell_type":"code","source":"len(X)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:53:16.346320Z","iopub.execute_input":"2024-05-01T07:53:16.346725Z","iopub.status.idle":"2024-05-01T07:53:16.353573Z","shell.execute_reply.started":"2024-05-01T07:53:16.346693Z","shell.execute_reply":"2024-05-01T07:53:16.352487Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"309"},"metadata":{}}]},{"cell_type":"code","source":"len(y)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:53:20.660908Z","iopub.execute_input":"2024-05-01T07:53:20.661269Z","iopub.status.idle":"2024-05-01T07:53:20.667894Z","shell.execute_reply.started":"2024-05-01T07:53:20.661242Z","shell.execute_reply":"2024-05-01T07:53:20.666812Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"309"},"metadata":{}}]},{"cell_type":"markdown","source":"**SVM ON X and y**","metadata":{}},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\nsvm_classifier = SVC()\n\nsvm_classifier.fit(X_train, y_train)\n\ny_pred = svm_classifier.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:13:46.552166Z","iopub.execute_input":"2024-05-01T08:13:46.552898Z","iopub.status.idle":"2024-05-01T08:13:48.228168Z","shell.execute_reply.started":"2024-05-01T08:13:46.552863Z","shell.execute_reply":"2024-05-01T08:13:48.226936Z"},"trusted":true},"execution_count":55,"outputs":[{"name":"stdout","text":"Accuracy: 0.3387096774193548\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Applying PCA on X**","metadata":{}},{"cell_type":"code","source":"from sklearn.decomposition import PCA\npca = PCA(n_components=80) \n\nX_pca = pca.fit_transform(X)\n\n\nprint(\"Explained variance ratio:\", pca.explained_variance_ratio_.sum())","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:13:11.640079Z","iopub.execute_input":"2024-05-01T08:13:11.640493Z","iopub.status.idle":"2024-05-01T08:13:12.372477Z","shell.execute_reply.started":"2024-05-01T08:13:11.640461Z","shell.execute_reply":"2024-05-01T08:13:12.371180Z"},"trusted":true},"execution_count":54,"outputs":[{"name":"stdout","text":"Explained variance ratio: 0.88563716\n","output_type":"stream"}]},{"cell_type":"code","source":"X_pca","metadata":{"execution":{"iopub.status.busy":"2024-05-01T07:54:39.855160Z","iopub.execute_input":"2024-05-01T07:54:39.855553Z","iopub.status.idle":"2024-05-01T07:54:39.865966Z","shell.execute_reply.started":"2024-05-01T07:54:39.855521Z","shell.execute_reply":"2024-05-01T07:54:39.864761Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"array([[-8.0132084e+00, -3.1232977e+00, -9.9183631e-01, ...,\n        -7.4460758e-03, -2.0185900e-01, -6.1657006e-01],\n       [-8.7568159e+00, -2.7532749e+00, -1.4878714e+00, ...,\n         1.6435418e-02,  5.6605065e-01, -2.3400928e-01],\n       [-5.7459941e+00, -1.1908336e+00, -3.3080307e-01, ...,\n        -4.0428562e-04, -1.1845175e+00,  5.5661005e-01],\n       ...,\n       [ 1.2962456e+01, -1.5082278e+00,  6.2663207e+00, ...,\n        -3.3157161e-01,  7.4884541e-02,  1.0580427e-01],\n       [ 9.2356987e+00, -7.2422934e-01,  1.7768782e+00, ...,\n         6.3725805e-01, -3.7533313e-01, -7.8667217e-01],\n       [-4.1600485e+00, -1.3640430e+00, -2.5100224e+00, ...,\n         7.3333286e-02, -1.7076762e-01,  3.5750926e-01]], dtype=float32)"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:12:50.971033Z","iopub.execute_input":"2024-05-01T08:12:50.971743Z","iopub.status.idle":"2024-05-01T08:12:50.976709Z","shell.execute_reply.started":"2024-05-01T08:12:50.971706Z","shell.execute_reply":"2024-05-01T08:12:50.975517Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"markdown","source":"**Scaling x**","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\n\n\nscaler = StandardScaler()\n\nX_train_scaled = scaler.fit_transform(X_train)\n\nX_test_scaled = scaler.transform(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:12:34.802239Z","iopub.execute_input":"2024-05-01T08:12:34.802637Z","iopub.status.idle":"2024-05-01T08:12:34.809666Z","shell.execute_reply.started":"2024-05-01T08:12:34.802604Z","shell.execute_reply":"2024-05-01T08:12:34.808737Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"from sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\n\n\nsvm_classifier = SVC(kernel='linear')\n\nsvm_classifier.fit(X_train_scaled, y_train)\n\n\ny_pred = svm_classifier.predict(X_test_scaled)\n\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:14:59.467242Z","iopub.execute_input":"2024-05-01T08:14:59.468189Z","iopub.status.idle":"2024-05-01T08:14:59.491092Z","shell.execute_reply.started":"2024-05-01T08:14:59.468152Z","shell.execute_reply":"2024-05-01T08:14:59.489990Z"},"trusted":true},"execution_count":56,"outputs":[{"name":"stdout","text":"Accuracy: 0.532258064516129\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**PCA + Linear kernel gives 53.2**","metadata":{}},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X_pca, y, test_size=0.2, random_state=42)\n\nsvm_classifier = SVC(kernel='linear')\n\nsvm_classifier.fit(X_train, y_train)\n\ny_pred = svm_classifier.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:15:43.139537Z","iopub.execute_input":"2024-05-01T08:15:43.140262Z","iopub.status.idle":"2024-05-01T08:15:43.166708Z","shell.execute_reply.started":"2024-05-01T08:15:43.140226Z","shell.execute_reply":"2024-05-01T08:15:43.165660Z"},"trusted":true},"execution_count":57,"outputs":[{"name":"stdout","text":"Accuracy: 0.5483870967741935\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\nparam_grid = {\n    'C': [0.1, 1, 10, 100],\n    'gamma': [1, 0.1, 0.01, 0.001],\n    'kernel': ['rbf', 'poly', 'sigmoid', 'linear']\n}\n\n\nsvm = SVC()\n\n\ngrid_search = GridSearchCV(estimator=svm, param_grid=param_grid, cv=10, n_jobs=-1, verbose=2)\n\ngrid_search.fit(X_train_scaled, y_train)\n\nbest_svm = grid_search.best_estimator_\n\naccuracy = best_svm.score(X_test_scaled, y_test)\nprint(\"Best Parameters:\", grid_search.best_params_)\nprint(\"Accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:17:41.456123Z","iopub.execute_input":"2024-05-01T08:17:41.456487Z","iopub.status.idle":"2024-05-01T08:17:44.462077Z","shell.execute_reply.started":"2024-05-01T08:17:41.456460Z","shell.execute_reply":"2024-05-01T08:17:44.460937Z"},"trusted":true},"execution_count":62,"outputs":[{"name":"stdout","text":"Fitting 10 folds for each of 64 candidates, totalling 640 fits\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=100, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=100, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=100, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=100, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .....................C=10, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=10, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=100, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=100, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=100, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...................C=10, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=100, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=100, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=100, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=100, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=0.1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=0.1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .........................C=10, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END .................C=0.1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ........................C=1, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .....................C=1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=10, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=1, kernel=linear; total time=   0.0s\n[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .......................C=10, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ......................C=10, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=0.1, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=0.1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END .....................C=0.1, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=0.01, kernel=poly; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=10, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END .....................C=10, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ......................C=10, gamma=0.001, kernel=rbf; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.1, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ....................C=0.1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ..................C=0.1, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...................C=0.1, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ...........................C=1, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ..........................C=1, gamma=1, kernel=poly; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END .......................C=1, gamma=1, kernel=sigmoid; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ......................C=1, gamma=0.1, kernel=linear; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ........................C=1, gamma=0.01, kernel=rbf; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ......................C=1, gamma=0.001, kernel=poly; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=1, gamma=0.001, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ....................C=1, gamma=0.001, kernel=linear; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=10, gamma=0.1, kernel=rbf; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END .......................C=10, gamma=0.1, kernel=poly; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ...................C=10, gamma=0.01, kernel=sigmoid; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END ....................C=10, gamma=0.01, kernel=linear; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END .........................C=100, gamma=1, kernel=rbf; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\n[CV] END ........................C=100, gamma=1, kernel=poly; total time=   0.0s\nBest Parameters: {'C': 10, 'gamma': 0.01, 'kernel': 'rbf'}\nAccuracy: 0.4838709677419355\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ny_encoded = label_encoder.fit_transform(y)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:18:56.263547Z","iopub.execute_input":"2024-05-01T08:18:56.264330Z","iopub.status.idle":"2024-05-01T08:18:56.269398Z","shell.execute_reply.started":"2024-05-01T08:18:56.264298Z","shell.execute_reply":"2024-05-01T08:18:56.268349Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\nlabel_encoder.fit(y)\n\ny_encoded = label_encoder.transform(y)\n\n\nunique_encoded_values = np.unique(y_encoded)\nprint(\"Encoded labels:\", unique_encoded_values)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:19:02.788021Z","iopub.execute_input":"2024-05-01T08:19:02.788388Z","iopub.status.idle":"2024-05-01T08:19:02.796171Z","shell.execute_reply.started":"2024-05-01T08:19:02.788362Z","shell.execute_reply":"2024-05-01T08:19:02.795013Z"},"trusted":true},"execution_count":66,"outputs":[{"name":"stdout","text":"Encoded labels: [0 1 2 3 4 5 6 7]\n","output_type":"stream"}]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X_pca, y_encoded, test_size=0.2, random_state=42)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:19:05.007501Z","iopub.execute_input":"2024-05-01T08:19:05.007918Z","iopub.status.idle":"2024-05-01T08:19:05.014179Z","shell.execute_reply.started":"2024-05-01T08:19:05.007886Z","shell.execute_reply":"2024-05-01T08:19:05.013137Z"},"trusted":true},"execution_count":67,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\n\n\nscaler = StandardScaler()\n\nX_train_scaled = scaler.fit_transform(X_train)\n\nX_test_scaled = scaler.transform(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:07:35.954548Z","iopub.execute_input":"2024-05-01T08:07:35.954954Z","iopub.status.idle":"2024-05-01T08:07:35.962626Z","shell.execute_reply.started":"2024-05-01T08:07:35.954924Z","shell.execute_reply":"2024-05-01T08:07:35.961446Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"svm_classifier = SVC(kernel='linear')\n\nsvm_classifier.fit(X_train_scaled, y_train)\n\ny_pred = svm_classifier.predict(X_test_scaled)\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:08:03.130694Z","iopub.execute_input":"2024-05-01T08:08:03.131397Z","iopub.status.idle":"2024-05-01T08:08:03.154256Z","shell.execute_reply.started":"2024-05-01T08:08:03.131361Z","shell.execute_reply":"2024-05-01T08:08:03.153277Z"},"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"Accuracy: 0.5\n","output_type":"stream"}]},{"cell_type":"code","source":"from xgboost import XGBClassifier\nfrom sklearn.metrics import accuracy_score\n\n\nxgb_classifier = XGBClassifier()\n\n\nxgb_classifier.fit(X_train_scaled, y_train)\n\ny_pred = xgb_classifier.predict(X_test_scaled)\n\n\naccuracy = accuracy_score(y_test, y_pred)\nprint(\"Accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:28:17.328995Z","iopub.execute_input":"2024-05-01T08:28:17.329690Z","iopub.status.idle":"2024-05-01T08:28:18.121118Z","shell.execute_reply.started":"2024-05-01T08:28:17.329655Z","shell.execute_reply":"2024-05-01T08:28:18.120099Z"},"trusted":true},"execution_count":69,"outputs":[{"name":"stdout","text":"Accuracy: 0.4838709677419355\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\nfrom xgboost import XGBClassifier\n\n\nparam_grid = {\n    'n_estimators': [100, 200, 300],\n    'max_depth': [3, 5, 7],\n    'learning_rate': [0.1, 0.01, 0.001]\n}\n\n\nxgb_classifier = XGBClassifier()\n\n\ngrid_search = GridSearchCV(estimator=xgb_classifier, param_grid=param_grid, cv=10, n_jobs=-1, verbose=2)\n\n\ngrid_search.fit(X_train_scaled, y_train)\n\nbest_xgb = grid_search.best_estimator_\n\n\naccuracy = best_xgb.score(X_test, y_test)\nprint(\"Best Parameters:\", grid_search.best_params_)\nprint(\"Accuracy:\", accuracy)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-01T08:19:17.867326Z","iopub.execute_input":"2024-05-01T08:19:17.867868Z","iopub.status.idle":"2024-05-01T08:28:17.327108Z","shell.execute_reply.started":"2024-05-01T08:19:17.867823Z","shell.execute_reply":"2024-05-01T08:28:17.326083Z"},"trusted":true},"execution_count":68,"outputs":[{"name":"stdout","text":"Fitting 10 folds for each of 27 candidates, totalling 270 fits\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.8s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.8s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   3.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   4.3s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.2s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.4s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.5s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.6s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   3.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   4.5s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.3s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.4s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.4s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.5s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.6s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   4.5s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   3.9s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   3.8s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.3s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.4s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.5s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.4s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   4.3s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   4.5s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   5.2s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   4.8s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   5.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   3.8s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   3.8s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   4.7s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   4.6s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=5, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=200; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END .learning_rate=0.001, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.7s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=100; total time=   2.8s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   3.6s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   4.2s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=200; total time=   3.8s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.3s\n[CV] END ...learning_rate=0.1, max_depth=3, n_estimators=300; total time=   4.4s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.6s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=100; total time=   3.6s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   4.4s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=200; total time=   4.3s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   5.0s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   4.9s\n[CV] END ...learning_rate=0.1, max_depth=5, n_estimators=300; total time=   5.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   3.9s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=100; total time=   3.9s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   4.6s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=200; total time=   4.8s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   6.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   0.0s\n[CV] END ...learning_rate=0.1, max_depth=7, n_estimators=300; total time=   5.1s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   3.4s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=100; total time=   3.5s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   7.0s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   7.2s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=200; total time=   7.1s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=  10.4s\n[CV] END ..learning_rate=0.01, max_depth=3, n_estimators=300; total time=  10.3s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   6.3s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.0s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=100; total time=   6.1s\n[CV] END ..learning_rate=0.01, max_depth=5, n_estimators=200; total time=  11.8s\nBest Parameters: {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100}\nAccuracy: 0.41935483870967744\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}